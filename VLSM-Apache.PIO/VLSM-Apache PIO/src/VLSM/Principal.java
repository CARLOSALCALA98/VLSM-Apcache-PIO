/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VLSM;

import java.io.FileOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRichTextString;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
/**
 *
 * @author Edgar
 */
public class Principal extends javax.swing.JFrame {
    double siguiente = 0;
    String Datos[][]={}, Nombres[]={"Subred","Direccion de red","Mascara de red","Primera IP","Ultima IP","Broadcast"};
    DefaultTableModel Modelo;
            
    public static String SL = System.getProperty("line.separator");
    ArrayList<Subred> Subredes = new ArrayList<>();
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        Modelo = new DefaultTableModel(Datos, Nombres);
        Tabla.setModel(Modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        N = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        IP1 = new javax.swing.JTextField();
        IP2 = new javax.swing.JTextField();
        IP3 = new javax.swing.JTextField();
        IP4 = new javax.swing.JTextField();
        Calcular = new javax.swing.JButton();
        Borrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tabla = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Subred", "Direccion de red", "Mascara de red", "Primera IP", "Ultima IP", "Broadcast"
            }
        ));
        jScrollPane1.setViewportView(Tabla);
        if (Tabla.getColumnModel().getColumnCount() > 0) {
            Tabla.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 538, 1400, 140));

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("VLSM para redes clase C");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Numero de subredes:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 200, -1, -1));
        getContentPane().add(N, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 230, 70, -1));

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Direccion IP:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 320, -1, -1));
        getContentPane().add(IP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 400, 60, -1));
        getContentPane().add(IP2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 400, 60, -1));
        getContentPane().add(IP3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 400, 60, -1));

        IP4.setEditable(false);
        IP4.setText("0");
        getContentPane().add(IP4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 400, 60, -1));

        Calcular.setBackground(new java.awt.Color(0, 102, 102));
        Calcular.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        Calcular.setForeground(new java.awt.Color(255, 255, 255));
        Calcular.setText("SUBNETEAR");
        Calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularActionPerformed(evt);
            }
        });
        getContentPane().add(Calcular, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 500, -1, -1));

        Borrar.setBackground(new java.awt.Color(0, 102, 102));
        Borrar.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        Borrar.setForeground(new java.awt.Color(255, 255, 255));
        Borrar.setText("BORRAR CAMPOS");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });
        getContentPane().add(Borrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 500, -1, -1));

        jLabel5.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("1er Octeto");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 380, -1, -1));

        jLabel6.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("2do Octeto");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 380, -1, -1));

        jLabel7.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("3er Octeto");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 380, -1, -1));

        jLabel8.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("4to Octeto");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 380, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pngtree-internet-technology-blockchain-flat-material-image_226364.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularActionPerformed
        double n;
        if(Integer.parseInt(IP1.getText())<192){
            JOptionPane.showMessageDialog(null, "Solo se admiten IPs de clase C."+SL+"Ingrese una IP valida");
        }else if(Integer.parseInt(IP2.getText())<0 || Integer.parseInt(IP3.getText())<0 ){
            JOptionPane.showMessageDialog(null, "No pueden existir octetos negativos."+SL+"Ingrese solamente valores positivos o 0");
        }else if(Integer.parseInt(N.getText())<=0){
            JOptionPane.showMessageDialog(null, "No puede existir un numero negativo o"+SL+"nulo de subredes. Ingrese solamente valores positivos"); 
        }else{
            for(int x=0;x<Double.parseDouble(N.getText());x++){
                    int subred = x+1;

                    do{    
                        n = Double.parseDouble(JOptionPane.showInputDialog(null, "Ingrese la cantidad de hosts que"+SL+
                                                                                 "desea en la red #"+subred));

                        if(n<=0){
                            JOptionPane.showMessageDialog(null, "No puede existir un numero negativo o"+SL+"nulo de hosts. Ingrese solamente valores positivos");
                        }
                    }while(n<=0);
                    Subred o = new Subred(n,siguiente);
                    o.ObtenerDatos();
                    siguiente = o.siguiente;
                    Subredes.add(o);
            }
            
               // Se crea el libro
        HSSFWorkbook libro = new HSSFWorkbook();

        // Se crea una hoja dentro del libro
        HSSFSheet hoja = libro.createSheet();

        // Se crea una fila dentro de la hoja
        HSSFRow fila = hoja.createRow(0);

        // Se crea una celda dentro de la fila
        HSSFCell celda = fila.createCell((short) 0);
        
                String Octetos = IP1.getText()+"."+IP2.getText()+"."+IP3.getText()+".", Mascara = "255.255.255.";
                for(int x=0;x<Subredes.size();x++){
                    int i=x+1;
                    String Dato[] = {String.valueOf(i),Octetos+String.valueOf(Subredes.get(x).Datos[0]),Mascara+String.valueOf(Subredes.get(x).Datos[1]),Octetos+String.valueOf(Subredes.get(x).Datos[2]),Octetos+String.valueOf(Subredes.get(x).Datos[3]),Octetos+String.valueOf(Subredes.get(x).Datos[4])};
                    Modelo.addRow(Dato);
                    
                     // Se crea el contenido de la celda y se mete en ella.
        
        HSSFRichTextString texto = new HSSFRichTextString("Resultado:"+Modelo.getDataVector()+"\n");
        
        celda.setCellValue(texto);
  
         // Se salva el libro. SUBNETING VLSM.xls
        try {
            FileOutputStream elFichero = new FileOutputStream("SUBNETING VLSM.xls");
            libro.write(elFichero);
            elFichero.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
                  JOptionPane.showMessageDialog(null, "DOCUMENTO XML", "DOCUMENTO GENERADO EN EXCEL", JOptionPane.WARNING_MESSAGE);
        
                }
            }
        
      

       
       
    
        
    }//GEN-LAST:event_CalcularActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        Modelo.setRowCount(0);
        Subredes.clear();
        siguiente = 0;
        N.setText(null);
        IP1.setText(null);
        IP2.setText(null);
        IP3.setText(null);
        
    }//GEN-LAST:event_BorrarActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Borrar;
    private javax.swing.JButton Calcular;
    private javax.swing.JTextField IP1;
    private javax.swing.JTextField IP2;
    private javax.swing.JTextField IP3;
    private javax.swing.JTextField IP4;
    private javax.swing.JTextField N;
    public static javax.swing.JTable Tabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
